﻿
@page "/change-password"

<style>
    .navbar {
        background-color: #000; /* Black background for navbar */
        box-shadow: 0 4px 10px rgba(0, 0, 0, 0.6);
    }

        .navbar .text-purple {
            color: #9b4dca; /* Purple text color */
        }

    /* Input field styling */
    .form-control {
        background-color: #1f1f1f; /* Dark background for input */
        border: 2px solid #9b4dca; /* Purple border */
        color: #f1f1f1; /* Light text color inside input */
        box-shadow: 0 0 5px #9b4dca; /* Purple glow effect */
        transition: all 0.3s ease;
    }

        .form-control:focus {
            border-color: #9b4dca; /* Purple focus border */
            box-shadow: 0 0 10px #9b4dca; /* Stronger purple glow on focus */
        }

    /* Button styling */
    .button {
        background: #9b4dff;
        color: #fff;
        border: none;
        border-radius: 10px;
        padding: 10px;
        font-size: 1rem;
        font-weight: 600;
        text-transform: uppercase;
        transition: all 0.3s ease;
    }

        .button:hover {
            background: #b366ff;
            transform: translateY(-2px);
            box-shadow: 0 6px 12px rgba(155, 77, 255, 0.6);
        }

</style>

<nav class="navbar ">
    <h1>Change Password</h1>
</nav>
<div class="form-body">
    <div class="form-container">
        @if (_globalState.CurrentUser != null && _globalState.CurrentUser.HasInitialPassword)
        {
            <AlertMessage Type="warning" Message="You are using the initial password. Please change it." />
        }
        <form class="text-center" @onsubmit="ChangePasswordHandler">
            <div class="form-floating">
                <input type="password" class="form-control current-password" @bind="_currentPassword"
                       placeholder="Current Password" />
                <label for="floatingInput">Current Password</label>
            </div>
            <div class="form-floating mb-3">
                <input type="password" class="form-control new-password" @bind="_newPassword"
                       placeholder="New Password" />
                <label for="floatingPassword">New Password</label>
            </div>
            @if (!string.IsNullOrEmpty(_successMessage))
            {
                <AlertMessage Type="success" Message="@_successMessage" />
            }
            else if (!string.IsNullOrEmpty(_errorMessage))
            {
                <AlertMessage Type="danger" Message="@_errorMessage" />
            }
            <button class="w-100 btn btn-lg button" type="submit">
                Submit
            </button>
        </form>
    </div>
</div>

@code {
    [CascadingParameter]
    private GlobalState _globalState { get; set; }
    private string _currentPassword { get; set; }
    private string _newPassword { get; set; }
    private string _errorMessage = "";
    private string _successMessage = "";
    protected override void OnInitialized()
    {
        _errorMessage = "";
        _successMessage = "";
    }

    private void ChangePasswordHandler()
    {
        try
        {
            _errorMessage = "";
            _successMessage = "";
            _globalState.CurrentUser = UserService.ChangePassword(_globalState.CurrentUser.UserId, _currentPassword, _newPassword);
            _currentPassword = "";
            _newPassword = "";
            _successMessage = "The password has been changed successfully.";
        }
        catch (Exception e)
        {
            _errorMessage = e.Message;
            Console.WriteLine(e);
        }
    }
}

